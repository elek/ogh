<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 13:22:03.208" rpa="false">
<suite id="s1" name="ozone-freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon/freon.robot">
<test id="s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:22:03.262" level="INFO">Running command 'ozone freon rk  --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:22:11.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:22:11.375" level="INFO">${output} = 2020-06-30 13:22:04,594 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:04,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:22:03.257" endtime="20200630 13:22:11.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:22:11.376" level="INFO">2020-06-30 13:22:04,594 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:04,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 13:22:04,809 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 13:22:05,777 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 13:22:05,778 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-06-30 13:22:05,778 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-06-30 13:22:05,778 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-06-30 13:22:05,779 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 13:22:05,779 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 13:22:05,779 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-06-30 13:22:05,781 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 13:22:05,790 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 13:22:05,839 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-19316, with hadoop as owner.
2020-06-30 13:22:05,878 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-19316/bucket-0-71780, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:22:06,409 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 13:22:06,798 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,060
Average Time spent in bucket creation: 00:00:00,031
Average Time spent in key creation: 00:00:00,076
Average Time spent in key write: 00:00:00,621
Total bytes written: 10240
Total Execution time: 00:00:05,963
***************************************************</msg>
<status status="PASS" starttime="20200630 13:22:11.375" endtime="20200630 13:22:11.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:22:11.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:22:11.376" endtime="20200630 13:22:11.377"></status>
</kw>
<msg timestamp="20200630 13:22:11.377" level="INFO">${result} = 2020-06-30 13:22:04,594 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:04,809 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:22:03.256" endtime="20200630 13:22:11.377"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:22:11.377" endtime="20200630 13:22:11.378"></status>
</kw>
<status status="PASS" starttime="20200630 13:22:11.377" endtime="20200630 13:22:11.378"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:22:03.256" endtime="20200630 13:22:11.378" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:22:11.382" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:22:16.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:22:16.706" level="INFO">${output} = 2020-06-30 13:22:12,639 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:12,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:22:11.380" endtime="20200630 13:22:16.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:22:16.707" level="INFO">2020-06-30 13:22:12,639 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:12,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 13:22:12,885 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 13:22:13,104 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qbypzflsm0
2020-06-30 13:22:13,131 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 13:22:14,134 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 13:22:14,135 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner.
2020-06-30 13:22:14,172 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:22:14,790 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 13:22:15,134 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 13:22:16,135 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 13:22:16,341 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=1320.411285, max=1320.411285, mean=1320.411285, stddev=0.0, median=1320.411285, p75=1320.411285, p95=1320.411285, p98=1320.411285, p99=1320.411285, p999=1320.411285, mean_rate=0.46982676947178614, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 13:22:16,342 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-06-30 13:22:16,343 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 13:22:16,343 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 13:22:16.706" endtime="20200630 13:22:16.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:22:16.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:22:16.707" endtime="20200630 13:22:16.708"></status>
</kw>
<msg timestamp="20200630 13:22:16.708" level="INFO">${result} = 2020-06-30 13:22:12,639 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:12,885 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:22:11.379" endtime="20200630 13:22:16.708"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:22:16.709" endtime="20200630 13:22:16.709"></status>
</kw>
<status status="PASS" starttime="20200630 13:22:16.708" endtime="20200630 13:22:16.709"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:22:11.378" endtime="20200630 13:22:16.709" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:22:16.713" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:22:20.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:22:20.469" level="INFO">${output} = 2020-06-30 13:22:18,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:18,249 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:22:16.711" endtime="20200630 13:22:20.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:22:20.470" level="INFO">2020-06-30 13:22:18,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:18,249 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 13:22:18,249 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 13:22:18,392 [main] INFO freon.BaseFreonGenerator: Executing test with prefix oadhskuqee
2020-06-30 13:22:18,407 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 13:22:19,408 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 13:22:20,411 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 13:22:20,431 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=51.063022, max=51.063022, mean=51.063022, stddev=0.0, median=51.063022, p75=51.063022, p95=51.063022, p98=51.063022, p99=51.063022, p999=51.063022, mean_rate=0.900579837698096, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 13:22:20,437 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 13:22:20,438 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 13:22:20,438 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 13:22:20.470" endtime="20200630 13:22:20.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:22:20.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:22:20.471" endtime="20200630 13:22:20.472"></status>
</kw>
<msg timestamp="20200630 13:22:20.472" level="INFO">${result} = 2020-06-30 13:22:18,033 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:18,249 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:22:16.710" endtime="20200630 13:22:20.472"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:22:20.473" endtime="20200630 13:22:20.473"></status>
</kw>
<status status="PASS" starttime="20200630 13:22:20.473" endtime="20200630 13:22:20.473"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:22:16.710" endtime="20200630 13:22:20.474" critical="yes"></status>
</test>
<test id="s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:22:20.479" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:22:24.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:22:24.115" level="INFO">${output} = 2020-06-30 13:22:21,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:22,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:22:20.477" endtime="20200630 13:22:24.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:22:24.116" level="INFO">2020-06-30 13:22:21,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:22,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 13:22:22,050 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 13:22:22,190 [main] INFO freon.BaseFreonGenerator: Executing test with prefix usuq9t8pfd
2020-06-30 13:22:22,207 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-06-30 13:22:23,218 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-06-30 13:22:24,054 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=13.112645, max=13.112645, mean=13.112645, stddev=0.0, median=13.112645, p75=13.112645, p95=13.112645, p98=13.112645, p99=13.112645, p999=13.112645, mean_rate=0.9555351758163894, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-06-30 13:22:24,062 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-06-30 13:22:24,064 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-06-30 13:22:24,064 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20200630 13:22:24.115" endtime="20200630 13:22:24.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:22:24.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:22:24.116" endtime="20200630 13:22:24.117"></status>
</kw>
<msg timestamp="20200630 13:22:24.117" level="INFO">${result} = 2020-06-30 13:22:21,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:22:22,049 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:22:20.476" endtime="20200630 13:22:24.117"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:22:24.118" endtime="20200630 13:22:24.118"></status>
</kw>
<status status="PASS" starttime="20200630 13:22:24.117" endtime="20200630 13:22:24.118"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:22:20.475" endtime="20200630 13:22:24.118" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 13:22:03.234" endtime="20200630 13:22:24.119"></status>
</suite>
<status status="PASS" starttime="20200630 13:22:03.209" endtime="20200630 13:22:24.122"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="ozone-freon">ozone-freon</stat>
<stat pass="4" fail="0" id="s1-s1" name="Freon">ozone-freon.Freon</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
