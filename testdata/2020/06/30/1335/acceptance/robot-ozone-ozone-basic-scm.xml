<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on linux)" generated="20200630 13:06:04.565" rpa="false">
<suite id="s1" name="ozone-basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" starttime="20200630 13:06:04.613" endtime="20200630 13:06:04.613"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:06:04.618" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:06:04.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:06:04.705" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 13:06:04 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 12:37:42 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 13:06:04.614" endtime="20200630 13:06:04.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:06:04.706" level="INFO">HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 13:06:04 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 12:37:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20200630 13:06:04.706" endtime="20200630 13:06:04.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:06:04.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:06:04.707" endtime="20200630 13:06:04.707"></status>
</kw>
<msg timestamp="20200630 13:06:04.707" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 30 Jun 2020 13:06:04 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 30 Jun 2020 12:37:42 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20200630 13:06:04.613" endtime="20200630 13:06:04.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200630 13:06:04.708" endtime="20200630 13:06:04.708"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:06:04.612" endtime="20200630 13:06:04.708" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 13:06:04.710" endtime="20200630 13:06:04.711"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:06:04.716" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:03.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:03.188" level="INFO">${output} = 2020-06-30 13:06:06,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:06:06,331 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:06:04.711" endtime="20200630 13:07:03.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:03.189" level="INFO">2020-06-30 13:06:06,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:06:06,331 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-06-30 13:06:06,331 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-06-30 13:06:08,566 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-06-30 13:06:08,567 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-06-30 13:06:08,567 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-06-30 13:06:08,567 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-06-30 13:06:08,567 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-06-30 13:06:08,567 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-06-30 13:06:08,567 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-06-30 13:06:08,570 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-06-30 13:06:08,572 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-06-30 13:06:08,584 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 13:06:08,636 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-27273, with hadoop as owner.
2020-06-30 13:06:08,941 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-08223, with hadoop as owner.
2020-06-30 13:06:08,957 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-26280, with hadoop as owner.
2020-06-30 13:06:08,968 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-54090, with hadoop as owner.
2020-06-30 13:06:08,983 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-13390, with hadoop as owner.
2020-06-30 13:06:08,997 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27273/bucket-0-10326, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,084 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-08223/bucket-0-09365, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,092 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26280/bucket-0-48039, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,102 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54090/bucket-0-71409, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,107 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-13390/bucket-0-00287, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,116 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27273/bucket-1-52332, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,130 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-08223/bucket-1-65242, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,136 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26280/bucket-1-07893, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,142 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54090/bucket-1-35204, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,153 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-13390/bucket-1-17438, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,163 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27273/bucket-2-96745, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,171 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-08223/bucket-2-14327, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,179 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26280/bucket-2-50631, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,188 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54090/bucket-2-02137, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,200 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-13390/bucket-2-23573, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,208 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27273/bucket-3-01163, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,223 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-08223/bucket-3-83611, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,233 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26280/bucket-3-40102, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,243 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54090/bucket-3-96946, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,248 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-13390/bucket-3-06420, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,251 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-27273/bucket-4-92701, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,255 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-08223/bucket-4-28845, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,258 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-26280/bucket-4-83025, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,263 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-54090/bucket-4-82064, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,268 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-13390/bucket-4-77063, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-06-30 13:06:09,593 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-06-30 13:06:10,323 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-06-30 13:06:10,593 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 13:06:11,594 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 13:06:12,594 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-06-30 13:06:13,610 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-06-30 13:06:14,610 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-06-30 13:06:15,611 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-06-30 13:06:16,611 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-06-30 13:06:17,612 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-30 13:06:18,613 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-30 13:06:19,613 [Thread-7] INFO freon.ProgressBar: Progress: 12.80 % (16 out of 125)
2020-06-30 13:06:20,614 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-06-30 13:06:21,614 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-30 13:06:22,615 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-30 13:06:23,616 [Thread-7] INFO freon.ProgressBar: Progress: 25.60 % (32 out of 125)
2020-06-30 13:06:24,616 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-30 13:06:25,617 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-06-30 13:06:26,617 [Thread-7] INFO freon.ProgressBar: Progress: 30.40 % (38 out of 125)
2020-06-30 13:06:27,618 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-30 13:06:28,619 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-06-30 13:06:29,623 [Thread-7] INFO freon.ProgressBar: Progress: 35.20 % (44 out of 125)
2020-06-30 13:06:30,623 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-06-30 13:06:31,623 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2020-06-30 13:06:32,624 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 13:06:33,625 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 13:06:34,625 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-06-30 13:06:35,626 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-06-30 13:06:36,626 [Thread-7] INFO freon.ProgressBar: Progress: 39.20 % (49 out of 125)
2020-06-30 13:06:37,627 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-06-30 13:06:38,627 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-06-30 13:06:39,628 [Thread-7] INFO freon.ProgressBar: Progress: 41.60 % (52 out of 125)
2020-06-30 13:06:40,628 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-06-30 13:06:41,629 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-06-30 13:06:42,629 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-06-30 13:06:43,630 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-06-30 13:06:44,631 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-06-30 13:06:45,631 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-06-30 13:06:46,632 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2020-06-30 13:06:47,634 [Thread-7] INFO freon.ProgressBar: Progress: 64.00 % (80 out of 125)
2020-06-30 13:06:48,634 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-30 13:06:49,635 [Thread-7] INFO freon.ProgressBar: Progress: 65.60 % (82 out of 125)
2020-06-30 13:06:50,635 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-06-30 13:06:51,636 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-06-30 13:06:52,636 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-06-30 13:06:53,637 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-06-30 13:06:54,637 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-06-30 13:06:55,638 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2020-06-30 13:06:56,646 [Thread-7] INFO freon.ProgressBar: Progress: 85.60 % (107 out of 125)
2020-06-30 13:06:57,647 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,377
Average Time spent in bucket creation: 00:00:00,191
Average Time spent in key creation: 00:00:02,210
Average Time spent in key write: 00:00:00,742
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:56,201
***************************************************</msg>
<status status="PASS" starttime="20200630 13:07:03.188" endtime="20200630 13:07:03.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:03.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:03.189" endtime="20200630 13:07:03.190"></status>
</kw>
<msg timestamp="20200630 13:07:03.190" level="INFO">${result} = 2020-06-30 13:06:06,122 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-06-30 13:06:06,331 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20200630 13:06:04.711" endtime="20200630 13:07:03.190"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:03.190" endtime="20200630 13:07:03.191"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:03.190" endtime="20200630 13:07:03.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:03.191" endtime="20200630 13:07:03.191"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" starttime="20200630 13:06:04.709" endtime="20200630 13:07:03.192" critical="yes"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20200630 13:06:04.591" endtime="20200630 13:07:03.192"></status>
</suite>
<suite id="s1-s2" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" type="setup">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200630 13:07:03.200" level="INFO">${random} = 74146</msg>
<status status="PASS" starttime="20200630 13:07:03.199" endtime="20200630 13:07:03.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200630 13:07:03.200" level="INFO">${prefix} = 74146</msg>
<status status="PASS" starttime="20200630 13:07:03.200" endtime="20200630 13:07:03.200"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:03.199" endtime="20200630 13:07:03.200"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:03.201" endtime="20200630 13:07:03.201"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:03.205" level="INFO">Running command 'ozone sh volume info o3://om:9862/74146-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:05.761" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 13:07:05.761" level="INFO">${output} = VOLUME_NOT_FOUND Volume 74146-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 13:07:03.203" endtime="20200630 13:07:05.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:05.762" level="INFO">VOLUME_NOT_FOUND Volume 74146-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 13:07:05.761" endtime="20200630 13:07:05.762"></status>
</kw>
<msg timestamp="20200630 13:07:05.762" level="INFO">${result} = VOLUME_NOT_FOUND Volume 74146-rpcwoport is not found</msg>
<status status="PASS" starttime="20200630 13:07:03.202" endtime="20200630 13:07:05.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:05.762" endtime="20200630 13:07:05.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:05.766" level="INFO">Running command 'ozone sh volume create o3://om:9862/74146-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:08.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:08.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:05.763" endtime="20200630 13:07:08.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:08.321" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:08.320" endtime="20200630 13:07:08.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:08.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:08.321" endtime="20200630 13:07:08.322"></status>
</kw>
<msg timestamp="20200630 13:07:08.322" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 13:07:05.763" endtime="20200630 13:07:08.322"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:08.322" endtime="20200630 13:07:08.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:08.327" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="74146-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:10.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:10.965" level="INFO">${output} = {
  "metadata": {},
  "name": "74146-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:07:08.163Z",
  "modificationTime": "2020-06-30T13:07:08.163Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 13:07:08.323" endtime="20200630 13:07:10.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:10.966" level="INFO">{
  "metadata": {},
  "name": "74146-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:07:08.163Z",
  "modificationTime": "2020-06-30T13:07:08.163Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 13:07:10.965" endtime="20200630 13:07:10.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:10.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:10.966" endtime="20200630 13:07:10.967"></status>
</kw>
<msg timestamp="20200630 13:07:10.967" level="INFO">${result} = {
  "metadata": {},
  "name": "74146-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:07:08.163Z",
  "modificationTime": "2020-06-30T13:07:08.163Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 13:07:08.323" endtime="20200630 13:07:10.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:10.967" endtime="20200630 13:07:10.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:10.971" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="74146-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:13.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:13.922" level="INFO">${output} = {
  "metadata": {},
  "name": "74146-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:07:08.163Z",
  "modificationTime": "2020-06-30T13:07:08.163Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 13:07:10.968" endtime="20200630 13:07:13.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:13.923" level="INFO">{
  "metadata": {},
  "name": "74146-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:07:08.163Z",
  "modificationTime": "2020-06-30T13:07:08.163Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 13:07:13.923" endtime="20200630 13:07:13.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:13.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:13.924" endtime="20200630 13:07:13.924"></status>
</kw>
<msg timestamp="20200630 13:07:13.924" level="INFO">${result} = {
  "metadata": {},
  "name": "74146-rpcwoport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:07:08.163Z",
  "modificationTime": "2020-06-30T13:07:08.163Z",
  "acls": [
 ...</msg>
<status status="PASS" starttime="20200630 13:07:10.967" endtime="20200630 13:07:13.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:13.924" endtime="20200630 13:07:13.925"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:13.927" level="INFO">Running command 'ozone sh volume update o3://om:9862/74146-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:16.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:16.659" level="INFO">${output} = {
  "metadata" : { },
  "name" : "74146-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T13:07:08.163Z",
  "modificationTime" : "2020-06-30T13:07:16.213Z",
  "acl...</msg>
<status status="PASS" starttime="20200630 13:07:13.925" endtime="20200630 13:07:16.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:16.660" level="INFO">{
  "metadata" : { },
  "name" : "74146-rpcwoport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T13:07:08.163Z",
  "modificationTime" : "2020-06-30T13:07:16.213Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 13:07:16.660" endtime="20200630 13:07:16.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:16.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:16.661" endtime="20200630 13:07:16.661"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:13.925" endtime="20200630 13:07:16.661"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:16.664" level="INFO">Running command 'ozone sh volume info o3://om:9862/74146-rpcwoport | jq -r '. | select(.name=="74146-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:19.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:19.393" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 13:07:16.662" endtime="20200630 13:07:19.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:19.394" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 13:07:19.394" endtime="20200630 13:07:19.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:19.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:19.395" endtime="20200630 13:07:19.395"></status>
</kw>
<msg timestamp="20200630 13:07:19.395" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 13:07:16.661" endtime="20200630 13:07:19.395"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:19.396" endtime="20200630 13:07:19.396"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:19.400" level="INFO">Running command 'ozone sh bucket create o3://om:9862/74146-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:21.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:21.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:19.396" endtime="20200630 13:07:21.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:21.975" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:21.974" endtime="20200630 13:07:21.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:21.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:21.975" endtime="20200630 13:07:21.976"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:19.396" endtime="20200630 13:07:21.976"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:21.979" level="INFO">Running command 'ozone sh bucket info o3://om:9862/74146-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:24.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:24.836" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 13:07:21.977" endtime="20200630 13:07:24.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:24.837" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 13:07:24.836" endtime="20200630 13:07:24.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:24.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:24.837" endtime="20200630 13:07:24.838"></status>
</kw>
<msg timestamp="20200630 13:07:24.838" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 13:07:21.976" endtime="20200630 13:07:24.838"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:24.838" endtime="20200630 13:07:24.838"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:24.842" level="INFO">Running command 'ozone sh bucket list o3://om:9862/74146-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:27.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:27.441" level="INFO">${output} = 74146-rpcwoport</msg>
<status status="PASS" starttime="20200630 13:07:24.839" endtime="20200630 13:07:27.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:27.442" level="INFO">74146-rpcwoport</msg>
<status status="PASS" starttime="20200630 13:07:27.442" endtime="20200630 13:07:27.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:27.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:27.443" endtime="20200630 13:07:27.443"></status>
</kw>
<msg timestamp="20200630 13:07:27.443" level="INFO">${result} = 74146-rpcwoport</msg>
<status status="PASS" starttime="20200630 13:07:24.839" endtime="20200630 13:07:27.443"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:27.443" endtime="20200630 13:07:27.444"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:27.447" level="INFO">Running command 'ozone sh key put o3://om:9862/74146-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:31.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:31.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:27.445" endtime="20200630 13:07:31.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:31.852" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:31.851" endtime="20200630 13:07:31.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:31.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:31.852" endtime="20200630 13:07:31.852"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:27.445" endtime="20200630 13:07:31.853"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:31.856" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:31.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:31.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:31.853" endtime="20200630 13:07:31.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:31.858" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:31.858" endtime="20200630 13:07:31.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:31.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:31.859" endtime="20200630 13:07:31.859"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:31.853" endtime="20200630 13:07:31.859"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:31.863" level="INFO">Running command 'ozone sh key get o3://om:9862/74146-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:36.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:36.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:31.860" endtime="20200630 13:07:36.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:36.155" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:36.154" endtime="20200630 13:07:36.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:36.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:36.155" endtime="20200630 13:07:36.156"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:31.859" endtime="20200630 13:07:36.156"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:36.158" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:36.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:36.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:36.156" endtime="20200630 13:07:36.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:36.163" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:36.163" endtime="20200630 13:07:36.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:36.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:36.164" endtime="20200630 13:07:36.164"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:36.156" endtime="20200630 13:07:36.164"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:36.167" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/74146-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:40.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:40.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:36.165" endtime="20200630 13:07:40.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:40.534" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:40.533" endtime="20200630 13:07:40.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:40.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:40.534" endtime="20200630 13:07:40.535"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:36.164" endtime="20200630 13:07:40.535"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:40.538" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:40.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:40.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:40.535" endtime="20200630 13:07:40.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:40.541" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:40.540" endtime="20200630 13:07:40.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:40.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:40.541" endtime="20200630 13:07:40.542"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:40.535" endtime="20200630 13:07:40.542"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:40.545" level="INFO">Running command 'ozone sh key get o3://om:9862/74146-rpcwoport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:44.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:44.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:40.543" endtime="20200630 13:07:44.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:44.922" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:44.922" endtime="20200630 13:07:44.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:44.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:44.922" endtime="20200630 13:07:44.923"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:40.542" endtime="20200630 13:07:44.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:44.926" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:44.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:44.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:44.924" endtime="20200630 13:07:44.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:44.929" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:44.928" endtime="20200630 13:07:44.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:44.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:44.929" endtime="20200630 13:07:44.929"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:44.923" endtime="20200630 13:07:44.930"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:44.933" level="INFO">Running command 'ozone sh key info o3://om:9862/74146-rpcwoport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:47.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:47.942" level="INFO">${output} = {
  "volumeName": "74146-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:07:38.537Z",
  "modificationTime": "2020-06-30T13:07:40.154Z",...</msg>
<status status="PASS" starttime="20200630 13:07:44.930" endtime="20200630 13:07:47.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:47.943" level="INFO">{
  "volumeName": "74146-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:07:38.537Z",
  "modificationTime": "2020-06-30T13:07:40.154Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104433087842549890,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 13:07:47.942" endtime="20200630 13:07:47.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:47.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:47.943" endtime="20200630 13:07:47.944"></status>
</kw>
<msg timestamp="20200630 13:07:47.944" level="INFO">${result} = {
  "volumeName": "74146-rpcwoport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:07:38.537Z",
  "modificationTime": "2020-06-30T13:07:40.154Z",...</msg>
<status status="PASS" starttime="20200630 13:07:44.930" endtime="20200630 13:07:47.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 13:07:47.944" endtime="20200630 13:07:47.944"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:47.949" level="INFO">Running command 'ozone sh key delete o3://om:9862/74146-rpcwoport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:50.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:50.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:47.945" endtime="20200630 13:07:50.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:50.483" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:50.482" endtime="20200630 13:07:50.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:50.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:50.483" endtime="20200630 13:07:50.484"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:47.945" endtime="20200630 13:07:50.484"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:50.487" level="INFO">Running command 'ozone sh key cp o3://om:9862/74146-rpcwoport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:55.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:55.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:50.485" endtime="20200630 13:07:55.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:55.408" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:55.407" endtime="20200630 13:07:55.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:55.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:55.408" endtime="20200630 13:07:55.409"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:50.484" endtime="20200630 13:07:55.409"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:55.412" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:55.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:55.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:55.409" endtime="20200630 13:07:55.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:55.416" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:55.415" endtime="20200630 13:07:55.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:55.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:55.416" endtime="20200630 13:07:55.416"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:55.409" endtime="20200630 13:07:55.417"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:55.421" level="INFO">Running command 'ozone sh key get o3://om:9862/74146-rpcwoport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:59.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:59.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:55.418" endtime="20200630 13:07:59.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:59.960" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:59.959" endtime="20200630 13:07:59.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:59.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:59.960" endtime="20200630 13:07:59.960"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:55.417" endtime="20200630 13:07:59.961"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:59.963" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:07:59.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:07:59.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:59.961" endtime="20200630 13:07:59.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:07:59.966" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:07:59.966" endtime="20200630 13:07:59.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:07:59.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:07:59.967" endtime="20200630 13:07:59.967"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:59.961" endtime="20200630 13:07:59.967"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:07:59.970" level="INFO">Running command 'ozone sh key delete o3://om:9862/74146-rpcwoport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:02.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:02.588" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:07:59.968" endtime="20200630 13:08:02.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:02.589" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:08:02.588" endtime="20200630 13:08:02.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:02.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:02.589" endtime="20200630 13:08:02.590"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:59.967" endtime="20200630 13:08:02.590"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:02.593" level="INFO">Running command 'ozone sh key get o3://om:9862/74146-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:04.982" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 13:08:04.982" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:08:02.591" endtime="20200630 13:08:04.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:04.983" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:08:04.983" endtime="20200630 13:08:04.984"></status>
</kw>
<msg timestamp="20200630 13:08:04.984" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:08:02.590" endtime="20200630 13:08:04.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:04.984" endtime="20200630 13:08:04.984"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:04.987" level="INFO">Running command 'ozone sh key get --force o3://om:9862/74146-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:09.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:09.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:08:04.985" endtime="20200630 13:08:09.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:09.406" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:08:09.405" endtime="20200630 13:08:09.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:09.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:09.406" endtime="20200630 13:08:09.406"></status>
</kw>
<msg timestamp="20200630 13:08:09.407" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 13:08:04.984" endtime="20200630 13:08:09.407"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:09.407" endtime="20200630 13:08:09.407"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:09.411" level="INFO">Running command 'ozone sh key info o3://om:9862/74146-rpcwoport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:12.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:12.270" level="INFO">${output} = {
  "volumeName": "74146-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:07:29.750Z",
  "modificationTime": "2020-06-30T13:07:31.365Z",
  "re...</msg>
<status status="PASS" starttime="20200630 13:08:09.408" endtime="20200630 13:08:12.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:12.271" level="INFO">{
  "volumeName": "74146-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:07:29.750Z",
  "modificationTime": "2020-06-30T13:07:31.365Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104433087266488450,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 13:08:12.271" endtime="20200630 13:08:12.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:12.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:12.272" endtime="20200630 13:08:12.272"></status>
</kw>
<msg timestamp="20200630 13:08:12.272" level="INFO">${result} = {
  "volumeName": "74146-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:07:29.750Z",
  "modificationTime": "2020-06-30T13:07:31.365Z",
  "re...</msg>
<status status="PASS" starttime="20200630 13:08:09.407" endtime="20200630 13:08:12.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:12.272" endtime="20200630 13:08:12.273"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:12.276" level="INFO">Running command 'ozone sh key list o3://om:9862/74146-rpcwoport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:15.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:15.080" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 13:08:12.274" endtime="20200630 13:08:15.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:15.081" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 13:08:15.081" endtime="20200630 13:08:15.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:15.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:15.082" endtime="20200630 13:08:15.082"></status>
</kw>
<msg timestamp="20200630 13:08:15.083" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 13:08:12.273" endtime="20200630 13:08:15.083"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:15.083" endtime="20200630 13:08:15.083"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:15.086" level="INFO">Running command 'ozone sh key rename o3://om:9862/74146-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:17.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:17.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:08:15.084" endtime="20200630 13:08:17.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:17.437" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:08:17.436" endtime="20200630 13:08:17.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:17.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:17.438" endtime="20200630 13:08:17.438"></status>
</kw>
<status status="PASS" starttime="20200630 13:08:15.083" endtime="20200630 13:08:17.438"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:17.441" level="INFO">Running command 'ozone sh key list o3://om:9862/74146-rpcwoport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:20.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:20.178" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 13:08:17.439" endtime="20200630 13:08:20.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:20.179" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 13:08:20.179" endtime="20200630 13:08:20.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:20.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:20.179" endtime="20200630 13:08:20.180"></status>
</kw>
<msg timestamp="20200630 13:08:20.180" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 13:08:17.438" endtime="20200630 13:08:20.180"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:20.180" endtime="20200630 13:08:20.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:20.184" level="INFO">Running command 'ozone sh key delete o3://om:9862/74146-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:22.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:22.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:08:20.181" endtime="20200630 13:08:22.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:22.672" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:08:22.672" endtime="20200630 13:08:22.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:22.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:22.673" endtime="20200630 13:08:22.673"></status>
</kw>
<status status="PASS" starttime="20200630 13:08:20.181" endtime="20200630 13:08:22.674"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:27.444" endtime="20200630 13:08:22.674"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:27.444" endtime="20200630 13:08:22.674"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:22.677" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/74146-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:25.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:25.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:08:22.675" endtime="20200630 13:08:25.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:25.093" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:08:25.092" endtime="20200630 13:08:25.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:25.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:25.093" endtime="20200630 13:08:25.094"></status>
</kw>
<status status="PASS" starttime="20200630 13:08:22.674" endtime="20200630 13:08:25.094"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:25.097" level="INFO">Running command 'ozone sh volume delete o3://om:9862/74146-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:27.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:27.480" level="INFO">${output} = Volume 74146-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 13:08:25.095" endtime="20200630 13:08:27.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:27.482" level="INFO">Volume 74146-rpcwoport is deleted</msg>
<status status="PASS" starttime="20200630 13:08:27.481" endtime="20200630 13:08:27.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:27.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:27.482" endtime="20200630 13:08:27.483"></status>
</kw>
<status status="PASS" starttime="20200630 13:08:25.094" endtime="20200630 13:08:27.483"></status>
</kw>
<status status="PASS" starttime="20200630 13:07:03.201" endtime="20200630 13:08:27.483"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 13:07:03.200" endtime="20200630 13:08:27.483" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:27.484" endtime="20200630 13:08:27.485"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:27.489" level="INFO">Running command 'ozone sh volume create o3://om:9862/74146-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:29.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:29.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:08:27.486" endtime="20200630 13:08:29.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:29.948" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:08:29.948" endtime="20200630 13:08:29.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:29.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:29.948" endtime="20200630 13:08:29.949"></status>
</kw>
<status status="PASS" starttime="20200630 13:08:27.485" endtime="20200630 13:08:29.949"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:29.952" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/74146-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:32.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:32.789" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:08:29.950" endtime="20200630 13:08:32.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:32.791" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:08:32.790" endtime="20200630 13:08:32.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:32.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:32.791" endtime="20200630 13:08:32.791"></status>
</kw>
<msg timestamp="20200630 13:08:32.791" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:08:29.949" endtime="20200630 13:08:32.792"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:32.792" endtime="20200630 13:08:32.793"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:32.795" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/74146-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:35.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:35.491" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 13:08:32.793" endtime="20200630 13:08:35.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:35.492" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 13:08:35.492" endtime="20200630 13:08:35.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:35.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:35.493" endtime="20200630 13:08:35.493"></status>
</kw>
<msg timestamp="20200630 13:08:35.494" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20200630 13:08:32.793" endtime="20200630 13:08:35.494"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:35.496" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/74146-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:38.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:38.208" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:08:35.494" endtime="20200630 13:08:38.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:38.209" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:08:38.209" endtime="20200630 13:08:38.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:38.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:38.210" endtime="20200630 13:08:38.210"></status>
</kw>
<msg timestamp="20200630 13:08:38.210" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:08:35.494" endtime="20200630 13:08:38.210"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:38.211" endtime="20200630 13:08:38.212"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:38.215" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/74146-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:40.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:40.703" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 13:08:38.212" endtime="20200630 13:08:40.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:40.704" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 13:08:40.703" endtime="20200630 13:08:40.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:40.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:40.704" endtime="20200630 13:08:40.704"></status>
</kw>
<msg timestamp="20200630 13:08:40.705" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20200630 13:08:38.212" endtime="20200630 13:08:40.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:40.708" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/74146-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:43.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:43.595" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:08:40.705" endtime="20200630 13:08:43.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:43.596" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:08:43.595" endtime="20200630 13:08:43.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:43.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:43.596" endtime="20200630 13:08:43.597"></status>
</kw>
<msg timestamp="20200630 13:08:43.597" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:08:40.705" endtime="20200630 13:08:43.597"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:43.597" endtime="20200630 13:08:43.598"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:43.602" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/74146-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:45.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:45.939" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:08:43.599" endtime="20200630 13:08:45.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:45.940" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:08:45.939" endtime="20200630 13:08:45.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:45.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:45.940" endtime="20200630 13:08:45.941"></status>
</kw>
<msg timestamp="20200630 13:08:45.941" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:08:43.598" endtime="20200630 13:08:45.941"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:45.945" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/74146-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:48.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:48.734" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 13:08:45.941" endtime="20200630 13:08:48.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:48.735" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:08:48.734" endtime="20200630 13:08:48.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:48.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:48.735" endtime="20200630 13:08:48.736"></status>
</kw>
<msg timestamp="20200630 13:08:48.736" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" starttime="20200630 13:08:45.941" endtime="20200630 13:08:48.736"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:48.736" endtime="20200630 13:08:48.736"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:48.737" endtime="20200630 13:08:48.737"></status>
</kw>
<status status="PASS" starttime="20200630 13:08:27.485" endtime="20200630 13:08:48.738"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 13:08:27.484" endtime="20200630 13:08:48.738" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:48.739" endtime="20200630 13:08:48.740"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:48.743" level="INFO">Running command 'ozone sh bucket create o3://om:9862/74146-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:51.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:51.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:08:48.741" endtime="20200630 13:08:51.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:51.061" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:08:51.061" endtime="20200630 13:08:51.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:51.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:51.061" endtime="20200630 13:08:51.062"></status>
</kw>
<status status="PASS" starttime="20200630 13:08:48.741" endtime="20200630 13:08:51.062"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:51.066" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/74146-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:53.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:53.748" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:08:51.063" endtime="20200630 13:08:53.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:53.750" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:08:53.749" endtime="20200630 13:08:53.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:53.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:53.750" endtime="20200630 13:08:53.751"></status>
</kw>
<msg timestamp="20200630 13:08:53.751" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:08:51.062" endtime="20200630 13:08:53.751"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:53.751" endtime="20200630 13:08:53.751"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:53.754" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/74146-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:56.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:56.100" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 13:08:53.752" endtime="20200630 13:08:56.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:56.101" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 13:08:56.101" endtime="20200630 13:08:56.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:56.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:56.102" endtime="20200630 13:08:56.102"></status>
</kw>
<msg timestamp="20200630 13:08:56.102" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20200630 13:08:53.752" endtime="20200630 13:08:56.102"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:56.106" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/74146-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:08:58.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:08:58.872" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:08:56.103" endtime="20200630 13:08:58.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:08:58.874" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:08:58.873" endtime="20200630 13:08:58.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:08:58.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:08:58.874" endtime="20200630 13:08:58.874"></status>
</kw>
<msg timestamp="20200630 13:08:58.875" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:08:56.102" endtime="20200630 13:08:58.875"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 13:08:58.875" endtime="20200630 13:08:58.876"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:08:58.880" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/74146-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:01.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:01.625" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 13:08:58.877" endtime="20200630 13:09:01.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:01.626" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 13:09:01.626" endtime="20200630 13:09:01.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:01.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:01.627" endtime="20200630 13:09:01.627"></status>
</kw>
<msg timestamp="20200630 13:09:01.628" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 13:08:58.876" endtime="20200630 13:09:01.628"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:01.633" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/74146-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:04.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:04.546" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:09:01.628" endtime="20200630 13:09:04.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:04.548" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:09:04.547" endtime="20200630 13:09:04.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:04.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:04.548" endtime="20200630 13:09:04.548"></status>
</kw>
<msg timestamp="20200630 13:09:04.548" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:09:01.628" endtime="20200630 13:09:04.548"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:04.549" endtime="20200630 13:09:04.549"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:04.553" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/74146-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:07.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:07.243" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:09:04.550" endtime="20200630 13:09:07.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:07.244" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:09:07.243" endtime="20200630 13:09:07.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:07.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:07.244" endtime="20200630 13:09:07.244"></status>
</kw>
<msg timestamp="20200630 13:09:07.245" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:09:04.550" endtime="20200630 13:09:07.245"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:07.247" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/74146-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:09.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:09.945" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 13:09:07.245" endtime="20200630 13:09:09.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:09.946" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:09:09.946" endtime="20200630 13:09:09.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:09.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:09.947" endtime="20200630 13:09:09.947"></status>
</kw>
<msg timestamp="20200630 13:09:09.947" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 13:09:07.245" endtime="20200630 13:09:09.947"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:09.947" endtime="20200630 13:09:09.948"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:09.948" endtime="20200630 13:09:09.948"></status>
</kw>
<status status="PASS" starttime="20200630 13:08:48.740" endtime="20200630 13:09:09.949"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 13:08:48.738" endtime="20200630 13:09:09.949" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:09.950" endtime="20200630 13:09:09.951"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:09.954" level="INFO">Running command 'ozone sh key put o3://om:9862/74146-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:14.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:14.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:09:09.952" endtime="20200630 13:09:14.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:14.474" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:09:14.474" endtime="20200630 13:09:14.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:14.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:14.475" endtime="20200630 13:09:14.475"></status>
</kw>
<status status="PASS" starttime="20200630 13:09:09.951" endtime="20200630 13:09:14.475"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:14.478" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74146-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:17.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:17.122" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:09:14.476" endtime="20200630 13:09:17.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:17.123" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:09:17.122" endtime="20200630 13:09:17.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:17.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:17.123" endtime="20200630 13:09:17.124"></status>
</kw>
<msg timestamp="20200630 13:09:17.124" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:09:14.475" endtime="20200630 13:09:17.124"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:17.124" endtime="20200630 13:09:17.125"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:17.129" level="INFO">Running command 'ozone sh key addacl o3://om:9862/74146-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:19.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:19.385" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 13:09:17.125" endtime="20200630 13:09:19.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:19.386" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 13:09:19.386" endtime="20200630 13:09:19.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:19.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:19.387" endtime="20200630 13:09:19.387"></status>
</kw>
<msg timestamp="20200630 13:09:19.387" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20200630 13:09:17.125" endtime="20200630 13:09:19.387"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:19.391" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74146-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:21.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:21.887" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:09:19.388" endtime="20200630 13:09:21.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:21.888" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:09:21.887" endtime="20200630 13:09:21.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:21.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:21.888" endtime="20200630 13:09:21.889"></status>
</kw>
<msg timestamp="20200630 13:09:21.889" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:09:19.387" endtime="20200630 13:09:21.889"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:21.889" endtime="20200630 13:09:21.890"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:21.893" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/74146-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:24.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:24.352" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 13:09:21.891" endtime="20200630 13:09:24.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:24.353" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 13:09:24.353" endtime="20200630 13:09:24.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:24.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:24.354" endtime="20200630 13:09:24.354"></status>
</kw>
<msg timestamp="20200630 13:09:24.354" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20200630 13:09:21.890" endtime="20200630 13:09:24.354"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:24.357" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74146-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:26.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:26.935" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:09:24.355" endtime="20200630 13:09:26.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:26.936" level="INFO">[ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:09:26.935" endtime="20200630 13:09:26.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:26.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:26.936" endtime="20200630 13:09:26.937"></status>
</kw>
<msg timestamp="20200630 13:09:26.937" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "hadoop",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "users",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type"...</msg>
<status status="PASS" starttime="20200630 13:09:24.354" endtime="20200630 13:09:26.937"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:26.937" endtime="20200630 13:09:26.938"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:26.941" level="INFO">Running command 'ozone sh key setacl o3://om:9862/74146-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:29.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:29.414" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:09:26.938" endtime="20200630 13:09:29.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:29.415" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:09:29.415" endtime="20200630 13:09:29.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:29.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:29.416" endtime="20200630 13:09:29.416"></status>
</kw>
<msg timestamp="20200630 13:09:29.417" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20200630 13:09:26.938" endtime="20200630 13:09:29.417"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:29.419" level="INFO">Running command 'ozone sh key getacl o3://om:9862/74146-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:32.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:32.061" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 13:09:29.417" endtime="20200630 13:09:32.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:32.063" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20200630 13:09:32.062" endtime="20200630 13:09:32.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:32.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:32.063" endtime="20200630 13:09:32.063"></status>
</kw>
<msg timestamp="20200630 13:09:32.064" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20200630 13:09:29.417" endtime="20200630 13:09:32.064"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:32.064" endtime="20200630 13:09:32.064"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:32.064" endtime="20200630 13:09:32.065"></status>
</kw>
<status status="PASS" starttime="20200630 13:09:09.951" endtime="20200630 13:09:32.065"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 13:09:09.949" endtime="20200630 13:09:32.065" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:32.067" endtime="20200630 13:09:32.067"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:32.071" level="INFO">Running command 'ozone sh volume info o3:///74146-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:34.497" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 13:09:34.497" level="INFO">${output} = VOLUME_NOT_FOUND Volume 74146-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 13:09:32.069" endtime="20200630 13:09:34.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:34.498" level="INFO">VOLUME_NOT_FOUND Volume 74146-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 13:09:34.497" endtime="20200630 13:09:34.498"></status>
</kw>
<msg timestamp="20200630 13:09:34.498" level="INFO">${result} = VOLUME_NOT_FOUND Volume 74146-rpcwport is not found</msg>
<status status="PASS" starttime="20200630 13:09:32.068" endtime="20200630 13:09:34.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:34.498" endtime="20200630 13:09:34.499"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:34.501" level="INFO">Running command 'ozone sh volume create o3:///74146-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:36.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:36.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:09:34.499" endtime="20200630 13:09:36.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:36.972" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:09:36.971" endtime="20200630 13:09:36.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:36.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:36.972" endtime="20200630 13:09:36.973"></status>
</kw>
<msg timestamp="20200630 13:09:36.973" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 13:09:34.499" endtime="20200630 13:09:36.973"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:36.973" endtime="20200630 13:09:36.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:36.976" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="74146-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:39.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:39.762" level="INFO">${output} = {
  "metadata": {},
  "name": "74146-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:09:36.810Z",
  "modificationTime": "2020-06-30T13:09:36.810Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 13:09:36.974" endtime="20200630 13:09:39.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:39.764" level="INFO">{
  "metadata": {},
  "name": "74146-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:09:36.810Z",
  "modificationTime": "2020-06-30T13:09:36.810Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 13:09:39.763" endtime="20200630 13:09:39.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:39.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:39.764" endtime="20200630 13:09:39.764"></status>
</kw>
<msg timestamp="20200630 13:09:39.764" level="INFO">${result} = {
  "metadata": {},
  "name": "74146-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:09:36.810Z",
  "modificationTime": "2020-06-30T13:09:36.810Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 13:09:36.974" endtime="20200630 13:09:39.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:39.765" endtime="20200630 13:09:39.765"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:39.768" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="74146-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:42.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:42.591" level="INFO">${output} = {
  "metadata": {},
  "name": "74146-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:09:36.810Z",
  "modificationTime": "2020-06-30T13:09:36.810Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 13:09:39.766" endtime="20200630 13:09:42.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:42.592" level="INFO">{
  "metadata": {},
  "name": "74146-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:09:36.810Z",
  "modificationTime": "2020-06-30T13:09:36.810Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 13:09:42.592" endtime="20200630 13:09:42.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:42.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:42.592" endtime="20200630 13:09:42.593"></status>
</kw>
<msg timestamp="20200630 13:09:42.593" level="INFO">${result} = {
  "metadata": {},
  "name": "74146-rpcwport",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:09:36.810Z",
  "modificationTime": "2020-06-30T13:09:36.810Z",
  "acls": [
  ...</msg>
<status status="PASS" starttime="20200630 13:09:39.765" endtime="20200630 13:09:42.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:42.593" endtime="20200630 13:09:42.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:42.597" level="INFO">Running command 'ozone sh volume update o3:///74146-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:45.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:45.401" level="INFO">${output} = {
  "metadata" : { },
  "name" : "74146-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T13:09:36.810Z",
  "modificationTime" : "2020-06-30T13:09:44.924Z",
  "acls...</msg>
<status status="PASS" starttime="20200630 13:09:42.595" endtime="20200630 13:09:45.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:45.402" level="INFO">{
  "metadata" : { },
  "name" : "74146-rpcwport",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T13:09:36.810Z",
  "modificationTime" : "2020-06-30T13:09:44.924Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 13:09:45.401" endtime="20200630 13:09:45.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:45.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:45.402" endtime="20200630 13:09:45.403"></status>
</kw>
<status status="PASS" starttime="20200630 13:09:42.594" endtime="20200630 13:09:45.403"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:45.406" level="INFO">Running command 'ozone sh volume info o3:///74146-rpcwport | jq -r '. | select(.name=="74146-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:48.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:48.231" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 13:09:45.404" endtime="20200630 13:09:48.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:48.232" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 13:09:48.231" endtime="20200630 13:09:48.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:48.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:48.232" endtime="20200630 13:09:48.233"></status>
</kw>
<msg timestamp="20200630 13:09:48.233" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 13:09:45.403" endtime="20200630 13:09:48.233"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:48.233" endtime="20200630 13:09:48.233"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:48.237" level="INFO">Running command 'ozone sh bucket create o3:///74146-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:50.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:50.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:09:48.234" endtime="20200630 13:09:50.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:50.698" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:09:50.697" endtime="20200630 13:09:50.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:50.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:50.698" endtime="20200630 13:09:50.698"></status>
</kw>
<status status="PASS" starttime="20200630 13:09:48.234" endtime="20200630 13:09:50.698"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:50.701" level="INFO">Running command 'ozone sh bucket info o3:///74146-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:53.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:53.538" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 13:09:50.699" endtime="20200630 13:09:53.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:53.539" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 13:09:53.539" endtime="20200630 13:09:53.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:53.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:53.539" endtime="20200630 13:09:53.540"></status>
</kw>
<msg timestamp="20200630 13:09:53.540" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 13:09:50.699" endtime="20200630 13:09:53.540"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:53.540" endtime="20200630 13:09:53.541"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:53.544" level="INFO">Running command 'ozone sh bucket list o3:///74146-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:09:56.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:09:56.172" level="INFO">${output} = 74146-rpcwport</msg>
<status status="PASS" starttime="20200630 13:09:53.541" endtime="20200630 13:09:56.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:09:56.173" level="INFO">74146-rpcwport</msg>
<status status="PASS" starttime="20200630 13:09:56.173" endtime="20200630 13:09:56.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:09:56.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:09:56.174" endtime="20200630 13:09:56.174"></status>
</kw>
<msg timestamp="20200630 13:09:56.174" level="INFO">${result} = 74146-rpcwport</msg>
<status status="PASS" starttime="20200630 13:09:53.541" endtime="20200630 13:09:56.174"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 13:09:56.175" endtime="20200630 13:09:56.175"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:09:56.178" level="INFO">Running command 'ozone sh key put o3:///74146-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:00.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:00.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:09:56.176" endtime="20200630 13:10:00.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:00.545" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:00.544" endtime="20200630 13:10:00.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:00.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:00.545" endtime="20200630 13:10:00.545"></status>
</kw>
<status status="PASS" starttime="20200630 13:09:56.176" endtime="20200630 13:10:00.545"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:00.549" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:00.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:00.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:00.546" endtime="20200630 13:10:00.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:00.552" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:00.552" endtime="20200630 13:10:00.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:00.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:00.553" endtime="20200630 13:10:00.553"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:00.546" endtime="20200630 13:10:00.553"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:00.556" level="INFO">Running command 'ozone sh key get o3:///74146-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:04.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:04.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:00.554" endtime="20200630 13:10:04.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:04.853" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:04.852" endtime="20200630 13:10:04.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:04.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:04.853" endtime="20200630 13:10:04.854"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:00.553" endtime="20200630 13:10:04.854"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:04.857" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:04.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:04.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:04.854" endtime="20200630 13:10:04.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:04.861" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:04.860" endtime="20200630 13:10:04.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:04.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:04.861" endtime="20200630 13:10:04.862"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:04.854" endtime="20200630 13:10:04.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:04.865" level="INFO">Running command 'ozone sh key put -t RATIS o3:///74146-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:09.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:09.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:04.863" endtime="20200630 13:10:09.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:09.352" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:09.351" endtime="20200630 13:10:09.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:09.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:09.352" endtime="20200630 13:10:09.352"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:04.862" endtime="20200630 13:10:09.353"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:09.356" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:09.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:09.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:09.353" endtime="20200630 13:10:09.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:09.358" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:09.358" endtime="20200630 13:10:09.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:09.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:09.359" endtime="20200630 13:10:09.359"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:09.353" endtime="20200630 13:10:09.359"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:09.363" level="INFO">Running command 'ozone sh key get o3:///74146-rpcwport/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:13.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:13.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:09.360" endtime="20200630 13:10:13.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:13.837" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:13.836" endtime="20200630 13:10:13.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:13.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:13.837" endtime="20200630 13:10:13.837"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:09.359" endtime="20200630 13:10:13.838"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:13.840" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:13.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:13.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:13.838" endtime="20200630 13:10:13.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:13.843" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:13.843" endtime="20200630 13:10:13.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:13.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:13.844" endtime="20200630 13:10:13.844"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:13.838" endtime="20200630 13:10:13.844"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:13.847" level="INFO">Running command 'ozone sh key info o3:///74146-rpcwport/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:16.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:16.580" level="INFO">${output} = {
  "volumeName": "74146-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:10:07.211Z",
  "modificationTime": "2020-06-30T13:10:08.790Z",
...</msg>
<status status="PASS" starttime="20200630 13:10:13.845" endtime="20200630 13:10:16.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:16.581" level="INFO">{
  "volumeName": "74146-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:10:07.211Z",
  "modificationTime": "2020-06-30T13:10:08.790Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104433097586114690,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 13:10:16.580" endtime="20200630 13:10:16.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:16.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:16.581" endtime="20200630 13:10:16.582"></status>
</kw>
<msg timestamp="20200630 13:10:16.582" level="INFO">${result} = {
  "volumeName": "74146-rpcwport",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:10:07.211Z",
  "modificationTime": "2020-06-30T13:10:08.790Z",
...</msg>
<status status="PASS" starttime="20200630 13:10:13.844" endtime="20200630 13:10:16.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 13:10:16.582" endtime="20200630 13:10:16.582"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:16.586" level="INFO">Running command 'ozone sh key delete o3:///74146-rpcwport/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:19.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:19.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:16.583" endtime="20200630 13:10:19.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:19.332" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:19.331" endtime="20200630 13:10:19.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:19.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:19.333" endtime="20200630 13:10:19.333"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:16.583" endtime="20200630 13:10:19.333"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:19.337" level="INFO">Running command 'ozone sh key cp o3:///74146-rpcwport/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:24.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:24.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:19.334" endtime="20200630 13:10:24.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:24.002" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:24.001" endtime="20200630 13:10:24.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:24.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:24.002" endtime="20200630 13:10:24.002"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:19.334" endtime="20200630 13:10:24.002"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:24.005" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:24.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:24.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:24.003" endtime="20200630 13:10:24.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:24.008" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:24.008" endtime="20200630 13:10:24.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:24.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:24.009" endtime="20200630 13:10:24.009"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:24.003" endtime="20200630 13:10:24.009"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:24.011" level="INFO">Running command 'ozone sh key get o3:///74146-rpcwport/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:28.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:28.239" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:24.010" endtime="20200630 13:10:28.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:28.240" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:28.239" endtime="20200630 13:10:28.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:28.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:28.240" endtime="20200630 13:10:28.240"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:24.009" endtime="20200630 13:10:28.241"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:28.243" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:28.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:28.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:28.241" endtime="20200630 13:10:28.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:28.246" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:28.246" endtime="20200630 13:10:28.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:28.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:28.247" endtime="20200630 13:10:28.247"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:28.241" endtime="20200630 13:10:28.247"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:28.250" level="INFO">Running command 'ozone sh key delete o3:///74146-rpcwport/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:30.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:30.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:28.248" endtime="20200630 13:10:30.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:30.813" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:30.812" endtime="20200630 13:10:30.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:30.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:30.813" endtime="20200630 13:10:30.814"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:28.247" endtime="20200630 13:10:30.814"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:30.817" level="INFO">Running command 'ozone sh key get o3:///74146-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:33.359" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 13:10:33.359" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:10:30.815" endtime="20200630 13:10:33.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:33.360" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:10:33.360" endtime="20200630 13:10:33.361"></status>
</kw>
<msg timestamp="20200630 13:10:33.361" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:10:30.814" endtime="20200630 13:10:33.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 13:10:33.361" endtime="20200630 13:10:33.361"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:33.364" level="INFO">Running command 'ozone sh key get --force o3:///74146-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:37.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:37.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:33.362" endtime="20200630 13:10:37.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:37.579" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:37.578" endtime="20200630 13:10:37.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:37.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:37.579" endtime="20200630 13:10:37.579"></status>
</kw>
<msg timestamp="20200630 13:10:37.580" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 13:10:33.362" endtime="20200630 13:10:37.580"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 13:10:37.580" endtime="20200630 13:10:37.580"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:37.583" level="INFO">Running command 'ozone sh key info o3:///74146-rpcwport/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:40.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:40.327" level="INFO">${output} = {
  "volumeName": "74146-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:09:58.527Z",
  "modificationTime": "2020-06-30T13:10:00.054Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 13:10:37.581" endtime="20200630 13:10:40.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:40.328" level="INFO">{
  "volumeName": "74146-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:09:58.527Z",
  "modificationTime": "2020-06-30T13:10:00.054Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104433097017000060,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 13:10:40.328" endtime="20200630 13:10:40.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:40.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:40.328" endtime="20200630 13:10:40.329"></status>
</kw>
<msg timestamp="20200630 13:10:40.329" level="INFO">${result} = {
  "volumeName": "74146-rpcwport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:09:58.527Z",
  "modificationTime": "2020-06-30T13:10:00.054Z",
  "rep...</msg>
<status status="PASS" starttime="20200630 13:10:37.580" endtime="20200630 13:10:40.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:10:40.329" endtime="20200630 13:10:40.330"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:40.334" level="INFO">Running command 'ozone sh key list o3:///74146-rpcwport/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:43.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:43.093" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 13:10:40.330" endtime="20200630 13:10:43.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:43.094" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 13:10:43.093" endtime="20200630 13:10:43.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:43.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:43.094" endtime="20200630 13:10:43.095"></status>
</kw>
<msg timestamp="20200630 13:10:43.095" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 13:10:40.330" endtime="20200630 13:10:43.095"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:10:43.095" endtime="20200630 13:10:43.096"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:43.099" level="INFO">Running command 'ozone sh key rename o3:///74146-rpcwport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:45.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:45.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:43.096" endtime="20200630 13:10:45.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:45.465" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:45.465" endtime="20200630 13:10:45.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:45.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:45.465" endtime="20200630 13:10:45.466"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:43.096" endtime="20200630 13:10:45.466"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:45.469" level="INFO">Running command 'ozone sh key list o3:///74146-rpcwport/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:48.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:48.199" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 13:10:45.467" endtime="20200630 13:10:48.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:48.200" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 13:10:48.200" endtime="20200630 13:10:48.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:48.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:48.201" endtime="20200630 13:10:48.201"></status>
</kw>
<msg timestamp="20200630 13:10:48.201" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 13:10:45.466" endtime="20200630 13:10:48.201"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 13:10:48.201" endtime="20200630 13:10:48.202"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:48.205" level="INFO">Running command 'ozone sh key delete o3:///74146-rpcwport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:50.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:50.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:48.203" endtime="20200630 13:10:50.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:50.634" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:50.633" endtime="20200630 13:10:50.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:50.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:50.634" endtime="20200630 13:10:50.635"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:48.202" endtime="20200630 13:10:50.635"></status>
</kw>
<status status="PASS" starttime="20200630 13:09:56.175" endtime="20200630 13:10:50.635"></status>
</kw>
<status status="PASS" starttime="20200630 13:09:56.175" endtime="20200630 13:10:50.635"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:50.639" level="INFO">Running command 'ozone sh bucket delete o3:///74146-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:52.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:52.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:50.636" endtime="20200630 13:10:52.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:52.989" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:10:52.989" endtime="20200630 13:10:52.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:52.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:52.990" endtime="20200630 13:10:52.990"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:50.635" endtime="20200630 13:10:52.990"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:52.993" level="INFO">Running command 'ozone sh volume delete o3:///74146-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:55.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:10:55.420" level="INFO">${output} = Volume 74146-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 13:10:52.991" endtime="20200630 13:10:55.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:55.421" level="INFO">Volume 74146-rpcwport is deleted</msg>
<status status="PASS" starttime="20200630 13:10:55.421" endtime="20200630 13:10:55.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:10:55.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:10:55.421" endtime="20200630 13:10:55.422"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:52.991" endtime="20200630 13:10:55.422"></status>
</kw>
<status status="PASS" starttime="20200630 13:09:32.067" endtime="20200630 13:10:55.423"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 13:09:32.066" endtime="20200630 13:10:55.423" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="setup">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" starttime="20200630 13:10:55.424" endtime="20200630 13:10:55.424"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:55.428" level="INFO">Running command 'ozone sh volume info /74146-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:10:57.785" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 13:10:57.785" level="INFO">${output} = VOLUME_NOT_FOUND Volume 74146-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 13:10:55.425" endtime="20200630 13:10:57.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:10:57.787" level="INFO">VOLUME_NOT_FOUND Volume 74146-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 13:10:57.786" endtime="20200630 13:10:57.787"></status>
</kw>
<msg timestamp="20200630 13:10:57.787" level="INFO">${result} = VOLUME_NOT_FOUND Volume 74146-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20200630 13:10:55.425" endtime="20200630 13:10:57.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" starttime="20200630 13:10:57.787" endtime="20200630 13:10:57.788"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:10:57.790" level="INFO">Running command 'ozone sh volume create /74146-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:00.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:00.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:10:57.788" endtime="20200630 13:11:00.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:00.124" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:00.124" endtime="20200630 13:11:00.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:00.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:00.124" endtime="20200630 13:11:00.125"></status>
</kw>
<msg timestamp="20200630 13:11:00.125" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 13:10:57.788" endtime="20200630 13:11:00.125"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:00.125" endtime="20200630 13:11:00.126"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:00.128" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="74146-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:02.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:02.915" level="INFO">${output} = {
  "metadata": {},
  "name": "74146-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:11:00.077Z",
  "modificationTime": "2020-06-30T13:11:00.077Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 13:11:00.126" endtime="20200630 13:11:02.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:02.917" level="INFO">{
  "metadata": {},
  "name": "74146-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:11:00.077Z",
  "modificationTime": "2020-06-30T13:11:00.077Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 13:11:02.916" endtime="20200630 13:11:02.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:02.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:02.917" endtime="20200630 13:11:02.918"></status>
</kw>
<msg timestamp="20200630 13:11:02.918" level="INFO">${result} = {
  "metadata": {},
  "name": "74146-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:11:00.077Z",
  "modificationTime": "2020-06-30T13:11:00.077Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 13:11:00.126" endtime="20200630 13:11:02.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:02.918" endtime="20200630 13:11:02.919"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:02.921" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="74146-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:05.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:05.618" level="INFO">${output} = {
  "metadata": {},
  "name": "74146-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:11:00.077Z",
  "modificationTime": "2020-06-30T13:11:00.077Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 13:11:02.919" endtime="20200630 13:11:05.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:05.619" level="INFO">{
  "metadata": {},
  "name": "74146-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:11:00.077Z",
  "modificationTime": "2020-06-30T13:11:00.077Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" starttime="20200630 13:11:05.619" endtime="20200630 13:11:05.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:05.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:05.620" endtime="20200630 13:11:05.620"></status>
</kw>
<msg timestamp="20200630 13:11:05.620" level="INFO">${result} = {
  "metadata": {},
  "name": "74146-rpcwoscheme",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-06-30T13:11:00.077Z",
  "modificationTime": "2020-06-30T13:11:00.077Z",
  "acls": [...</msg>
<status status="PASS" starttime="20200630 13:11:02.919" endtime="20200630 13:11:05.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:05.620" endtime="20200630 13:11:05.621"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:05.624" level="INFO">Running command 'ozone sh volume update /74146-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:08.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:08.355" level="INFO">${output} = {
  "metadata" : { },
  "name" : "74146-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T13:11:00.077Z",
  "modificationTime" : "2020-06-30T13:11:07.954Z",
  "a...</msg>
<status status="PASS" starttime="20200630 13:11:05.621" endtime="20200630 13:11:08.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:08.356" level="INFO">{
  "metadata" : { },
  "name" : "74146-rpcwoscheme",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-06-30T13:11:00.077Z",
  "modificationTime" : "2020-06-30T13:11:07.954Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" starttime="20200630 13:11:08.355" endtime="20200630 13:11:08.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:08.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:08.356" endtime="20200630 13:11:08.356"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:05.621" endtime="20200630 13:11:08.357"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:08.360" level="INFO">Running command 'ozone sh volume info /74146-rpcwoscheme | jq -r '. | select(.name=="74146-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:11.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:11.073" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20200630 13:11:08.357" endtime="20200630 13:11:11.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:11.074" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20200630 13:11:11.074" endtime="20200630 13:11:11.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:11.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:11.075" endtime="20200630 13:11:11.075"></status>
</kw>
<msg timestamp="20200630 13:11:11.075" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20200630 13:11:08.357" endtime="20200630 13:11:11.075"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:11.075" endtime="20200630 13:11:11.076"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:11.079" level="INFO">Running command 'ozone sh bucket create /74146-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:13.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:13.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:11.076" endtime="20200630 13:11:13.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:13.662" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:13.661" endtime="20200630 13:11:13.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:13.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:13.662" endtime="20200630 13:11:13.663"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:11.076" endtime="20200630 13:11:13.663"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:13.666" level="INFO">Running command 'ozone sh bucket info /74146-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:16.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:16.150" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20200630 13:11:13.664" endtime="20200630 13:11:16.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:16.151" level="INFO">DISK</msg>
<status status="PASS" starttime="20200630 13:11:16.150" endtime="20200630 13:11:16.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:16.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:16.151" endtime="20200630 13:11:16.151"></status>
</kw>
<msg timestamp="20200630 13:11:16.152" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20200630 13:11:13.663" endtime="20200630 13:11:16.152"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:16.152" endtime="20200630 13:11:16.152"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:16.155" level="INFO">Running command 'ozone sh bucket list /74146-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:18.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:18.899" level="INFO">${output} = 74146-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 13:11:16.153" endtime="20200630 13:11:18.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:18.900" level="INFO">74146-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 13:11:18.900" endtime="20200630 13:11:18.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:18.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:18.901" endtime="20200630 13:11:18.901"></status>
</kw>
<msg timestamp="20200630 13:11:18.901" level="INFO">${result} = 74146-rpcwoscheme</msg>
<status status="PASS" starttime="20200630 13:11:16.152" endtime="20200630 13:11:18.901"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:18.901" endtime="20200630 13:11:18.902"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:18.905" level="INFO">Running command 'ozone sh key put /74146-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:23.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:23.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:18.903" endtime="20200630 13:11:23.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:23.213" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:23.213" endtime="20200630 13:11:23.213"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:23.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:23.213" endtime="20200630 13:11:23.214"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:18.903" endtime="20200630 13:11:23.214"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:23.217" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:23.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:23.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:23.215" endtime="20200630 13:11:23.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:23.220" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:23.219" endtime="20200630 13:11:23.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:23.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:23.220" endtime="20200630 13:11:23.221"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:23.214" endtime="20200630 13:11:23.221"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:23.224" level="INFO">Running command 'ozone sh key get /74146-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:27.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:27.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:23.221" endtime="20200630 13:11:27.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:27.707" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:27.706" endtime="20200630 13:11:27.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:27.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:27.707" endtime="20200630 13:11:27.708"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:23.221" endtime="20200630 13:11:27.708"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:27.712" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:27.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:27.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:27.708" endtime="20200630 13:11:27.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:27.714" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:27.713" endtime="20200630 13:11:27.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:27.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:27.714" endtime="20200630 13:11:27.715"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:27.708" endtime="20200630 13:11:27.715"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:27.718" level="INFO">Running command 'ozone sh key put -t RATIS /74146-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:31.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:31.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:27.715" endtime="20200630 13:11:31.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:31.988" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:31.987" endtime="20200630 13:11:31.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:31.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:31.988" endtime="20200630 13:11:31.989"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:27.715" endtime="20200630 13:11:31.989"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:31.992" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:31.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:31.995" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:31.989" endtime="20200630 13:11:31.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:31.996" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:31.996" endtime="20200630 13:11:31.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:31.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:31.997" endtime="20200630 13:11:31.997"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:31.989" endtime="20200630 13:11:31.997"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:32.000" level="INFO">Running command 'ozone sh key get /74146-rpcwoscheme/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:36.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:36.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:31.998" endtime="20200630 13:11:36.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:36.224" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:36.223" endtime="20200630 13:11:36.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:36.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:36.224" endtime="20200630 13:11:36.225"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:31.997" endtime="20200630 13:11:36.225"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:36.228" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:36.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:36.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:36.226" endtime="20200630 13:11:36.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:36.231" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:36.231" endtime="20200630 13:11:36.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:36.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:36.231" endtime="20200630 13:11:36.232"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:36.225" endtime="20200630 13:11:36.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:36.235" level="INFO">Running command 'ozone sh key info /74146-rpcwoscheme/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:38.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:38.936" level="INFO">${output} = {
  "volumeName": "74146-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:11:29.966Z",
  "modificationTime": "2020-06-30T13:11:31.510Z...</msg>
<status status="PASS" starttime="20200630 13:11:36.233" endtime="20200630 13:11:38.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:38.937" level="INFO">{
  "volumeName": "74146-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:11:29.966Z",
  "modificationTime": "2020-06-30T13:11:31.510Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104433103009480830,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 13:11:38.937" endtime="20200630 13:11:38.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:38.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:38.939" endtime="20200630 13:11:38.940"></status>
</kw>
<msg timestamp="20200630 13:11:38.940" level="INFO">${result} = {
  "volumeName": "74146-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:11:29.966Z",
  "modificationTime": "2020-06-30T13:11:31.510Z...</msg>
<status status="PASS" starttime="20200630 13:11:36.232" endtime="20200630 13:11:38.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:38.941" endtime="20200630 13:11:38.941"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:38.944" level="INFO">Running command 'ozone sh key delete /74146-rpcwoscheme/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:41.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:41.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:38.942" endtime="20200630 13:11:41.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:41.342" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:41.341" endtime="20200630 13:11:41.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:41.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:41.342" endtime="20200630 13:11:41.343"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:38.941" endtime="20200630 13:11:41.343"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:41.347" level="INFO">Running command 'ozone sh key cp /74146-rpcwoscheme/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:46.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:46.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:41.343" endtime="20200630 13:11:46.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:46.135" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:46.135" endtime="20200630 13:11:46.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:46.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:46.136" endtime="20200630 13:11:46.136"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:41.343" endtime="20200630 13:11:46.136"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:46.139" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:46.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:46.141" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:46.137" endtime="20200630 13:11:46.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:46.142" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:46.142" endtime="20200630 13:11:46.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:46.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:46.142" endtime="20200630 13:11:46.143"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:46.136" endtime="20200630 13:11:46.144"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:46.146" level="INFO">Running command 'ozone sh key get /74146-rpcwoscheme/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:50.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:50.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:46.144" endtime="20200630 13:11:50.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:50.378" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:50.377" endtime="20200630 13:11:50.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:50.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:50.378" endtime="20200630 13:11:50.379"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:46.144" endtime="20200630 13:11:50.379"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:50.381" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:50.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:50.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:50.379" endtime="20200630 13:11:50.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:50.385" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:50.384" endtime="20200630 13:11:50.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:50.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:50.385" endtime="20200630 13:11:50.385"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:50.379" endtime="20200630 13:11:50.385"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:50.388" level="INFO">Running command 'ozone sh key delete /74146-rpcwoscheme/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:52.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:52.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:50.386" endtime="20200630 13:11:52.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:52.735" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:52.734" endtime="20200630 13:11:52.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:52.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:52.735" endtime="20200630 13:11:52.736"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:50.386" endtime="20200630 13:11:52.736"></status>
</kw>
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:52.739" level="INFO">Running command 'ozone sh key get /74146-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:55.105" level="INFO">${rc} = 255</msg>
<msg timestamp="20200630 13:11:55.105" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:11:52.737" endtime="20200630 13:11:55.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:55.107" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:11:55.106" endtime="20200630 13:11:55.107"></status>
</kw>
<msg timestamp="20200630 13:11:55.107" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" starttime="20200630 13:11:52.736" endtime="20200630 13:11:55.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:55.107" endtime="20200630 13:11:55.107"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:55.110" level="INFO">Running command 'ozone sh key get --force /74146-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:11:59.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:11:59.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:11:55.108" endtime="20200630 13:11:59.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:11:59.177" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:11:59.176" endtime="20200630 13:11:59.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:11:59.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:11:59.177" endtime="20200630 13:11:59.178"></status>
</kw>
<msg timestamp="20200630 13:11:59.178" level="INFO">${result} = </msg>
<status status="PASS" starttime="20200630 13:11:55.108" endtime="20200630 13:11:59.178"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" starttime="20200630 13:11:59.178" endtime="20200630 13:11:59.179"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:11:59.181" level="INFO">Running command 'ozone sh key info /74146-rpcwoscheme/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:12:01.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:12:01.787" level="INFO">${output} = {
  "volumeName": "74146-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:11:21.128Z",
  "modificationTime": "2020-06-30T13:11:22.759Z",
  "...</msg>
<status status="PASS" starttime="20200630 13:11:59.179" endtime="20200630 13:12:01.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:12:01.788" level="INFO">{
  "volumeName": "74146-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:11:21.128Z",
  "modificationTime": "2020-06-30T13:11:22.759Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104433102430339200,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" starttime="20200630 13:12:01.787" endtime="20200630 13:12:01.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:12:01.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:12:01.788" endtime="20200630 13:12:01.789"></status>
</kw>
<msg timestamp="20200630 13:12:01.789" level="INFO">${result} = {
  "volumeName": "74146-rpcwoscheme",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-06-30T13:11:21.128Z",
  "modificationTime": "2020-06-30T13:11:22.759Z",
  "...</msg>
<status status="PASS" starttime="20200630 13:11:59.179" endtime="20200630 13:12:01.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" starttime="20200630 13:12:01.789" endtime="20200630 13:12:01.790"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:12:01.794" level="INFO">Running command 'ozone sh key list /74146-rpcwoscheme/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:12:04.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:12:04.860" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20200630 13:12:01.791" endtime="20200630 13:12:04.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:12:04.861" level="INFO">key1</msg>
<status status="PASS" starttime="20200630 13:12:04.860" endtime="20200630 13:12:04.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:12:04.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:12:04.861" endtime="20200630 13:12:04.861"></status>
</kw>
<msg timestamp="20200630 13:12:04.862" level="INFO">${result} = key1</msg>
<status status="PASS" starttime="20200630 13:12:01.790" endtime="20200630 13:12:04.862"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" starttime="20200630 13:12:04.862" endtime="20200630 13:12:04.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:12:04.865" level="INFO">Running command 'ozone sh key rename /74146-rpcwoscheme/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:12:07.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:12:07.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:12:04.863" endtime="20200630 13:12:07.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:12:07.180" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:12:07.179" endtime="20200630 13:12:07.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:12:07.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:12:07.180" endtime="20200630 13:12:07.181"></status>
</kw>
<status status="PASS" starttime="20200630 13:12:04.862" endtime="20200630 13:12:07.181"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:12:07.184" level="INFO">Running command 'ozone sh key list /74146-rpcwoscheme/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:12:09.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:12:09.799" level="INFO">${output} = key2</msg>
<status status="PASS" starttime="20200630 13:12:07.182" endtime="20200630 13:12:09.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:12:09.800" level="INFO">key2</msg>
<status status="PASS" starttime="20200630 13:12:09.800" endtime="20200630 13:12:09.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:12:09.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:12:09.801" endtime="20200630 13:12:09.801"></status>
</kw>
<msg timestamp="20200630 13:12:09.801" level="INFO">${result} = key2</msg>
<status status="PASS" starttime="20200630 13:12:07.181" endtime="20200630 13:12:09.801"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" starttime="20200630 13:12:09.802" endtime="20200630 13:12:09.802"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:12:09.805" level="INFO">Running command 'ozone sh key delete /74146-rpcwoscheme/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:12:12.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:12:12.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:12:09.803" endtime="20200630 13:12:12.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:12:12.245" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:12:12.244" endtime="20200630 13:12:12.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:12:12.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:12:12.245" endtime="20200630 13:12:12.245"></status>
</kw>
<status status="PASS" starttime="20200630 13:12:09.802" endtime="20200630 13:12:12.245"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:18.902" endtime="20200630 13:12:12.246"></status>
</kw>
<status status="PASS" starttime="20200630 13:11:18.902" endtime="20200630 13:12:12.246"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:12:12.248" level="INFO">Running command 'ozone sh bucket delete /74146-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:12:14.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:12:14.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20200630 13:12:12.246" endtime="20200630 13:12:14.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:12:14.783" level="INFO"></msg>
<status status="PASS" starttime="20200630 13:12:14.782" endtime="20200630 13:12:14.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:12:14.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:12:14.783" endtime="20200630 13:12:14.783"></status>
</kw>
<status status="PASS" starttime="20200630 13:12:12.246" endtime="20200630 13:12:14.784"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200630 13:12:14.786" level="INFO">Running command 'ozone sh volume delete /74146-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200630 13:12:17.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20200630 13:12:17.167" level="INFO">${output} = Volume 74146-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 13:12:14.784" endtime="20200630 13:12:17.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200630 13:12:17.169" level="INFO">Volume 74146-rpcwoscheme is deleted</msg>
<status status="PASS" starttime="20200630 13:12:17.168" endtime="20200630 13:12:17.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20200630 13:12:17.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200630 13:12:17.169" endtime="20200630 13:12:17.169"></status>
</kw>
<status status="PASS" starttime="20200630 13:12:14.784" endtime="20200630 13:12:17.170"></status>
</kw>
<status status="PASS" starttime="20200630 13:10:55.424" endtime="20200630 13:12:17.170"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" starttime="20200630 13:10:55.423" endtime="20200630 13:12:17.170" critical="yes"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" starttime="20200630 13:07:03.194" endtime="20200630 13:12:17.172"></status>
</suite>
<status status="PASS" starttime="20200630 13:06:04.566" endtime="20200630 13:12:17.177"></status>
</suite>
<statistics>
<total>
<stat pass="8" fail="0">Critical Tests</stat>
<stat pass="8" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" id="s1" name="ozone-basic">ozone-basic</stat>
<stat pass="2" fail="0" id="s1-s1" name="Basic">ozone-basic.Basic</stat>
<stat pass="6" fail="0" id="s1-s2" name="Ozone-Shell">ozone-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
